<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Concerns\HasUuids;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;

class Event extends Model
{
    use HasFactory, HasUuids;

    protected $fillable = [
        'user_id',
        'title',
        'event_date',
        'event_time',
        'description',
        'categories',
        'location',
        'logo',
        'type',
        'event_link',
        'links_instagram',
        'links_twitter',
        'links_facebook',
        'timezone',
        'undisclose_location',
        'alias',
        'location_tips',
        'is_featured',
        'longitude',
        'latitude',
    ];

    public function scopeFilter(Builder $builder)
    {

        $builder->when(request('search'), function ($builder) {
            $builder->where('title', 'like', '%' . request('search') . '%')
                ->orWhere('categories', 'like', '%' . request('search') . '%')
                ->orWhere('location', 'like', '%' . request('search') . '%');

        });

        $builder->when(request('category'), function ($builder) {
            $builder->where('categories', 'like', '%' . request('category') . '%');
        });

        $builder->when(request('location'), function ($builder) {
            $builder->where('location', 'like', '%' . request('location') . '%');
        });
        $builder->when(request('date'), function ($builder) {
            $builder->where('commence_date', '=', request('date'));
        });

    }

    public function coupons()
    {
        return $this->hasMany(Coupon::class, 'event_id');
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::saving(function ($event) {
            $event->alias = Str::slug($event->title);
        });
    }

    public function getStartDateTimeAttribute()
    {
        return $this->commence_date . ' ' . $this->commence_time;
    }

    public function getEndDateTimeAttribute()
    {
        return $this->end_date . ' ' . $this->end_time;
    }

    public function getLogoAttribute($value)
    {
        $logo = env('APP_URL') . '/' . $value;
        return $logo;
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function tickets()
    {
        return $this->hasMany(Ticket::class);
    }

    public function sales()
    {
        return $this->hasMany(Sale::class);
    }

}
